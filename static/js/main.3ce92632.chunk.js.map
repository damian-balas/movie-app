{"version":3,"sources":["components/Header/Header.js","components/MovieItem/MovieItem.js","components/Spinner/Spinner.js","components/LoadingIndicator/LoadingIndicator.js","components/MovieGrid/MovieGrid.js","components/Search/Search.js","pages/Homepage/Homepage.js","pages/Favspage/Favspage.js","pages/MovieInfo/MovieInfo.js","App.js","index.js"],"names":["Header","className","to","aria-label","MovieItem","favs","handleFavButttonClicked","id","Title","Poster","src","alt","value","onClick","includes","aira-hidden","Spinner","LoadingIndicator","props","usePromiseTracker","delay","promiseInProgress","MovieGrid","this","movies","map","imdbID","key","Math","floor","random","loadingIndicatorOff","Component","Search","autoComplete","htmlFor","placeholder","onChange","handleChange","type","name","handleSubmit","aria-hidden","Homepage","handleClearMovies","Favspage","state","forEach","trackPromise","fetch","then","response","json","data","setState","concat","MovieInfo","movie","match","params","Response","history","replace","Plot","Genre","Released","Actors","imdbRating","Runtime","App","event","query","target","preventDefault","catch","error","console","saveInLocalStorage","localStorage","setItem","JSON","stringify","currentTarget","filter","classList","remove","add","parse","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3ce92632.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Header.sass\";\n\nconst Header = () => (\n  <header className=\"header\">\n    <Link className=\"logo\" to=\"/\">\n      Movie App\n    </Link>\n    <Link className=\"link\" to=\"/favs\">\n      <span aria-label=\"Favourites page\" className=\"fas fa-heart\"></span>\n    </Link>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MovieItem.sass\";\n\nconst MovieItem = ({ favs, handleFavButttonClicked, id, Title, Poster }) => (\n  <div className=\"movie-item\">\n    <div className=\"img-wrapper\">\n      <img className=\"img\" src={`${Poster}`} alt={`${Title} - Poster`} />\n    </div>\n    <div className=\"btns-group\">\n      <Link to={`/movie/${id}`} className=\"info-btn\">\n        <span\n          aria-label={`More information about ${Title}`}\n          className=\"fas fa-info\"\n        ></span>\n      </Link>\n      <button\n        aria-label=\"Add to favourites\"\n        className=\"fav-btn\"\n        value={id}\n        onClick={handleFavButttonClicked}\n      >\n        {favs.includes(id) ? (\n          <span aira-hidden=\"true\" className=\"fas fa-heart\"></span>\n        ) : (\n          <span aira-hidden=\"true\" className=\"far fa-heart\"></span>\n        )}\n      </button>\n    </div>\n  </div>\n);\n\nexport default MovieItem;\n","import React from \"react\";\n\nimport \"./Spinner.sass\";\n\nconst Spinner = () => (\n  <div className=\"sk-folding-cube\">\n    <div className=\"sk-cube1 sk-cube\"></div>\n    <div className=\"sk-cube2 sk-cube\"></div>\n    <div className=\"sk-cube4 sk-cube\"></div>\n    <div className=\"sk-cube3 sk-cube\"></div>\n  </div>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\n\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker({ delay: 250 });\n  return promiseInProgress && <Spinner />;\n};\n\nexport default LoadingIndicator;\n","import React, { Component } from \"react\";\n\nimport MovieItem from \"../MovieItem/MovieItem\";\n\nimport \"./MovieGrid.sass\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\n\nclass MovieGrid extends Component {\n  render() {\n    return (\n      <div className=\"movie-grid\">\n        {this.props.movies\n          ? this.props.movies.map(({ imdbID, Title, Poster }) => (\n              <MovieItem\n                key={`${imdbID}_${Math.floor(Math.random() * 1000)}`}\n                id={imdbID}\n                Title={Title}\n                Poster={Poster}\n                favs={this.props.favs}\n                handleFavButttonClicked={this.props.handleFavButttonClicked}\n              />\n            ))\n          : null}\n        {this.props.loadingIndicatorOff ? null : <LoadingIndicator />}\n      </div>\n    );\n  }\n}\n\nexport default MovieGrid;\n","import React from \"react\";\n\nimport \"./Search.sass\";\n\nconst Search = props => (\n  <form autoComplete=\"off\" className=\"form\">\n    <label className=\"label\" htmlFor=\"query\">\n      Search Movie:{\" \"}\n    </label>\n    <input\n      placeholder=\"Search for movies...\"\n      className=\"search-input\"\n      onChange={props.handleChange}\n      type=\"text\"\n      name=\"query\"\n      id=\"query\"\n    />\n    <button className=\"submit-btn\" onClick={props.handleSubmit} type=\"submit\">\n      <span aria-hidden=\"true\" className=\"fas fa-search\"></span>\n    </button>\n  </form>\n);\n\nexport default Search;\n","import React, { Fragment } from \"react\";\n\nimport MovieGrid from \"../../components/MovieGrid/MovieGrid\";\nimport Search from \"../../components/Search/Search\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\n\nconst Homepage = props => (\n  <Fragment>\n    <Search\n      handleClearMovies={props.handleClearMovies}\n      handleChange={props.handleChange}\n      handleSubmit={props.handleSubmit}\n    />\n    <LoadingIndicator />\n    <MovieGrid\n      loadingIndicatorOff={true}\n      favs={props.favs}\n      handleFavButttonClicked={props.handleFavButttonClicked}\n      movies={props.movies}\n    />\n  </Fragment>\n);\n\nexport default Homepage;\n","import React, { Component, Fragment } from \"react\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nimport MovieGrid from \"../../components/MovieGrid/MovieGrid\";\n\nclass Favspage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.favs.forEach(id => {\n      trackPromise(\n        fetch(`https://omdbapi.com/?apikey=251e77f3&i=${id}`)\n          .then(response => response.json())\n          .then(data =>\n            this.setState(state => {\n              const moviesArray = state.movies.concat(data);\n              return {\n                movies: moviesArray\n              };\n            })\n          )\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MovieGrid\n          favs={this.props.favs}\n          handleFavButttonClicked={this.props.handleFavButttonClicked}\n          movies={this.state.movies}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Favspage;\n","import React, { Component, Fragment } from \"react\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\n\nimport \"./MovieInfo.sass\";\n\nclass MovieInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movie: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    trackPromise(\n      fetch(`https://omdbapi.com/?apikey=251e77f3&i=${id}&plot=full`)\n        .then(response => response.json())\n        .then(data =>\n          this.setState({ movie: data }, () => {\n            if (this.state.movie.Response === \"False\") {\n              this.props.history.replace(\"/\");\n            }\n          })\n        )\n    );\n  }\n\n  render() {\n    const {\n      Poster,\n      Title,\n      Plot,\n      Genre,\n      Released,\n      Actors,\n      imdbRating,\n      Runtime\n    } = this.state.movie;\n\n    return (\n      <Fragment>\n        <LoadingIndicator />\n        {this.state.movie ? (\n          <div className=\"movie-info\">\n            <div className=\"img-wrapper\">\n              <img className=\"img\" src={`${Poster}`} alt={`${Title} Poster`} />\n            </div>\n            <h2 className=\"title\">{Title}</h2>\n            <div className=\"info\">\n              <span className=\"released\">{Released}</span>\n              <span className=\"runtime\">{Runtime}</span>\n              <span>{imdbRating} / 10</span>\n            </div>\n            <span className=\"genre\">{Genre}</span>\n            <span className=\"actors\">{Actors}</span>\n            <p className=\"plot\">{Plot}</p>\n\n            <button\n              aria-label=\"Add to favourites\"\n              className=\"fav-btn\"\n              value={this.props.match.params.id}\n              onClick={this.props.handleFavButttonClicked}\n            >\n              {this.props.favs.includes(this.props.match.params.id) ? (\n                <span aira-hidden=\"true\" className=\"fas fa-heart\"></span>\n              ) : (\n                <span aira-hidden=\"true\" className=\"far fa-heart\"></span>\n              )}\n            </button>\n          </div>\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nexport default MovieInfo;\n","import React, { Component, Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nimport Header from \"./components/Header/Header\";\nimport Homepage from \"./pages/Homepage/Homepage\";\nimport Favspage from \"./pages/Favspage/Favspage\";\nimport MovieInfo from \"./pages/MovieInfo/MovieInfo\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: \"\",\n      query: \"\",\n      favs: localStorage.favs ? JSON.parse(localStorage.favs) : []\n    };\n  }\n\n  handleChange = event => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    // this.setState({isLoading: true})\n    // try {\n    //   const response = await fetch(\n    //     `https://www.omdbapi.com/?s=${this.state.query}&apikey=251e77f3`\n    //   );\n    //   const json = await response.json();\n    //   this.setState({ movies: json.Search });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n\n    trackPromise(\n      fetch(`https://www.omdbapi.com/?s=${this.state.query}&apikey=251e77f3`)\n        .then(response => response.json())\n        .then(data => this.setState({ movies: data.Search }))\n        .catch(error => console.error(error))\n    );\n  };\n\n  saveInLocalStorage = favs => {\n    localStorage.setItem(\"favs\", JSON.stringify(favs));\n  };\n\n  handleFavButttonClicked = event => {\n    const value = event.currentTarget.value;\n    if (!this.state.favs.includes(value)) {\n      this.setState(\n        state => {\n          const favs = state.favs.concat(value);\n\n          return {\n            favs\n          };\n        },\n        () => {\n          this.saveInLocalStorage(this.state.favs);\n        }\n      );\n      event.currentTarget.classList.add(\"in-favs\");\n    } else {\n      this.setState(\n        state => {\n          const favs = state.favs.filter(id => id !== value);\n          return {\n            favs\n          };\n        },\n        () => {\n          this.saveInLocalStorage(this.state.favs);\n        }\n      );\n      event.currentTarget.classList.remove(\"in-favs\");\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path=\"/favs\"\n            render={() => (\n              <Favspage\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/movie/:id\"\n            render={props => (\n              <MovieInfo\n                {...props}\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            render={() => (\n              <Homepage\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n                movies={this.state.movies}\n                handleClearMovies={this.handleClearMovies}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n              />\n            )}\n          />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}