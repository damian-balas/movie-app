{"version":3,"sources":["components/Header/Header.js","components/MovieItem/MovieItem.js","components/MovieGrid/MovieGrid.js","components/Spinner/Spinner.js","components/Search/Search.js","pages/Homepage/Homepage.js","pages/Favspage/Favspage.js","pages/MovieInfo/MovieInfo.js","App.js","index.js"],"names":["Header","className","to","aria-label","MovieItem","favs","handleFavButttonClicked","id","Title","Poster","src","alt","value","onClick","includes","aira-hidden","MovieGrid","this","props","movies","map","imdbID","key","Math","floor","random","Component","Spinner","Search","autoComplete","htmlFor","placeholder","onChange","handleChange","type","name","handleSubmit","aria-hidden","Homepage","handleClearMovies","isLoading","Favspage","state","forEach","fetch","then","response","json","data","setState","concat","length","style","textAlign","marginTop","fontSize","MovieInfo","movie","match","params","Response","history","replace","Plot","Genre","Released","Actors","imdbRating","Runtime","App","event","query","target","a","preventDefault","console","error","saveInLocalStorage","localStorage","setItem","JSON","stringify","currentTarget","filter","classList","remove","add","parse","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d67c925d.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Header.sass'\n\nconst Header = () => (\n  <header className='header'>\n    <Link className='logo' to='/'>Movie App</Link>\n    <Link className='link' to='/favs'>\n      <span aria-label=\"Favourites page\" className='fas fa-heart'></span>\n    </Link>\n  </header>\n)\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './MovieItem.sass'\n\nconst MovieItem = ({favs, handleFavButttonClicked, id, Title, Poster }) => (\n  <div className=\"movie-item\">\n    <div className=\"img-wrapper\">\n      <img className='img' src={`${Poster}`} alt={`${Title} - Poster`}/>\n    </div>\n    <div className=\"btns-group\">\n      <Link to={`/movie/${id}`} className='info-btn'>\n       <span aria-label={`More information about ${Title}`} className=\"fas fa-info\"></span>\n      </Link>\n      <button aria-label=\"Add to favourites\" className='fav-btn' value={id} onClick={handleFavButttonClicked}>{favs.includes(id) ? <span aira-hidden='true' className=\"fas fa-heart\"></span> : <span aira-hidden='true' className=\"far fa-heart\"></span>}</button>\n    </div>\n  </div>\n)\n\nexport default MovieItem","import React, { Component } from 'react'\n\nimport MovieItem from '../MovieItem/MovieItem'\n\nimport './MovieGrid.sass'\n\nclass MovieGrid extends Component {\n\n  render(){\n    return(\n      <div className=\"movie-grid\">\n        {\n          this.props.movies ? this.props.movies.map(({imdbID, Title, Poster })=> <MovieItem key={`${imdbID}_${Math.floor(Math.random()*1000)}`} id={imdbID} Title={Title} Poster={Poster} favs={this.props.favs} handleFavButttonClicked={this.props.handleFavButttonClicked}/>) : null\n        }\n      </div>\n    )\n  }\n}\n\nexport default MovieGrid","import React from 'react'\n\nimport './Spinner.sass'\n\nconst Spinner = () => (\n  <div className=\"sk-folding-cube\">\n    <div className=\"sk-cube1 sk-cube\"></div>\n    <div className=\"sk-cube2 sk-cube\"></div>\n    <div className=\"sk-cube4 sk-cube\"></div>\n    <div className=\"sk-cube3 sk-cube\"></div>\n  </div>\n)\n\nexport default Spinner","import React from 'react'\n\nimport './Search.sass'\n\nconst Search = (props) => (\n  <form autoComplete=\"off\" className='form'>\n    <label className='label' htmlFor=\"query\">Search Movie: </label>\n    <input  placeholder='Search for movies...' className='search-input' onChange={props.handleChange} type=\"text\" name=\"query\" id=\"query\"/>\n    <button className='submit-btn' onClick={props.handleSubmit} type=\"submit\">\n      <span aria-hidden=\"true\" className=\"fas fa-search\"></span>\n    </button>\n  </form>\n)\n\nexport default Search","import React, { Fragment } from 'react'\n\nimport MovieGrid from '../../components/MovieGrid/MovieGrid'\nimport Spinner from '../../components/Spinner/Spinner'\nimport Search from '../../components/Search/Search'\n\nconst Homepage = (props) => (\n  <Fragment>\n    <Search handleClearMovies={props.handleClearMovies} handleChange={props.handleChange} handleSubmit={props.handleSubmit}/>\n    {props.isLoading ? <Spinner /> : <MovieGrid favs={props.favs} handleFavButttonClicked={props.handleFavButttonClicked} movies={props.movies}/>}\n  </Fragment>\n)\n\nexport default Homepage","import React, { Component, Fragment } from \"react\";\n\nimport MovieGrid from \"../../components/MovieGrid/MovieGrid\";\n\nclass Favspage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.favs.forEach(id => {\n      fetch(`https://omdbapi.com/?apikey=251e77f3&i=${id}`)\n        .then(response => response.json())\n        .then(data =>\n          this.setState(state => {\n            const moviesArray = state.movies.concat(data);\n            return {\n              movies: moviesArray\n            };\n          })\n        );\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.movies.length > 0 ? (\n          <MovieGrid\n            favs={this.props.favs}\n            handleFavButttonClicked={this.props.handleFavButttonClicked}\n            movies={this.state.movies}\n          />\n        ) : (\n          <h1\n            style={{\n              textAlign: \"center\",\n              marginTop: \"20px\",\n              fontSize: \"36px\"\n            }}\n          >\n            ADD MOVIES TO FAVOURITES FIRST...\n          </h1>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Favspage;\n","import React, { Component } from 'react'\n\nimport './MovieInfo.sass'\n\nclass MovieInfo extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      movie: ''\n    }\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id \n\n    fetch(`https://omdbapi.com/?apikey=251e77f3&i=${id}&plot=full`)\n    .then(response => response.json())\n    .then(data => this.setState({movie: data}, () => {\n      if(this.state.movie.Response === \"False\") {\n        this.props.history.replace('/')\n      }\n    }));\n  }\n  \n\n  render(){\n\n    const {Poster, Title, Plot, Genre, Released, Actors, imdbRating, Runtime} = this.state.movie\n\n    return(\n      <div className=\"movie-info\">\n          <div className=\"img-wrapper\">\n            <img className='img' src={`${Poster}`} alt={`${Title} Poster`}/>\n          </div>\n          <h2 className='title'>{Title}</h2>\n          <div className='info'>\n            <span className='released'>{Released}</span>\n            <span className=\"runtime\">{Runtime}</span>\n            <span>{imdbRating} / 10</span>\n          </div>\n          <span className='genre'>{Genre}</span>\n          <span className='actors'>{Actors}</span>\n          <p className='plot'>\n            {Plot}\n          </p>\n          \n          <button aria-label=\"Add to favourites\" className='fav-btn' value={this.props.match.params.id} onClick={this.props.handleFavButttonClicked}>{this.props.favs.includes(this.props.match.params.id ) ? <span aira-hidden='true' className=\"fas fa-heart\"></span> : <span aira-hidden='true' className=\"far fa-heart\"></span>}</button>\n      </div>\n    )\n  }\n}\n\nexport default MovieInfo","import React, { Component, Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Homepage from \"./pages/Homepage/Homepage\";\nimport Favspage from \"./pages/Favspage/Favspage\";\nimport MovieInfo from './pages/MovieInfo/MovieInfo'\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: \"\",\n      query: \"\",\n      favs: localStorage.favs ? JSON.parse(localStorage.favs) : [],\n      isLoading: false\n    };\n\n  }\n\n  handleChange = event => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({isLoading: true})\n    try {\n      const response = await fetch(\n        `https://www.omdbapi.com/?s=${this.state.query}&apikey=251e77f3`\n      );\n      const json = await response.json();\n      this.setState({ movies: json.Search }, () => this.setState({isLoading: false}));\n    } catch (error) {\n      console.error(error);\n      this.setState({isLoading: false})\n    }\n  };\n\n  saveInLocalStorage = (favs) => {\n    localStorage.setItem('favs', JSON.stringify(favs))\n  }\n\n  handleFavButttonClicked = event => {\n    const value = event.currentTarget.value;\n    if (!this.state.favs.includes(value)) {\n      this.setState(\n        state => {\n          const favs = state.favs.concat(value);\n\n          return {\n            favs\n          };\n        },\n        () => {\n          this.saveInLocalStorage(this.state.favs)\n        }\n      );\n      event.currentTarget.classList.add(\"in-favs\");\n    } else {\n      this.setState(\n        state => {\n          const favs = state.favs.filter(id => id !== value);\n          return {\n            favs\n          };\n        },\n        () => {\n          this.saveInLocalStorage(this.state.favs)\n        }\n      );\n      event.currentTarget.classList.remove(\"in-favs\");\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Switch>\n          <Route\n            exact \n            path=\"/favs\"\n            render={() => (\n              <Favspage\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n          <Route \n            exact \n            path=\"/movie/:id\"\n            render={(props) => (\n              <MovieInfo\n                {...props}\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            render={() => (\n              <Homepage\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n                movies={this.state.movies}\n                handleClearMovies={this.handleClearMovies}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                isLoading={this.state.isLoading}\n              />\n            )}\n          />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {HashRouter} from 'react-router-dom'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}