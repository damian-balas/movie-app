{"version":3,"sources":["components/Header/Header.js","components/MovieItem/MovieItem.js","components/Spinner/Spinner.js","components/LoadingIndicator/LoadingIndicator.js","components/MovieGrid/MovieGrid.js","components/Search/Search.js","pages/Homepage/Homepage.js","pages/Favspage/Favspage.js","pages/MovieInfo/MovieInfo.js","App.js","index.js"],"names":["Header","className","to","aria-label","MovieItem","favs","handleFavButttonClicked","id","Title","Poster","src","alt","value","onClick","includes","aira-hidden","Spinner","LoadingIndicator","props","usePromiseTracker","promiseInProgress","MovieGrid","nextProps","nextState","movies","this","map","imdbID","key","loadingIndicatorOff","Component","Search","autoComplete","htmlFor","placeholder","onChange","handleChange","type","name","handleSubmit","aria-hidden","Homepage","event","setState","query","target","preventDefault","signal","trackPromise","fetch","state","then","response","json","data","catch","error","console","log","message","controller","AbortController","abort","Favspage","forEach","concat","MovieInfo","movie","match","params","Response","history","replace","Plot","Genre","Released","Actors","imdbRating","Runtime","App","saveInLocalStorage","localStorage","setItem","JSON","stringify","currentTarget","filter","parse","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.560a8531.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Header.sass\";\n\nconst Header = () => (\n  <header className=\"header\">\n    <Link className=\"logo\" to=\"/\">\n      Movie App\n    </Link>\n    <Link className=\"link\" to=\"/favs\">\n      <span aria-label=\"Favourites page\" className=\"fas fa-heart\"></span>\n    </Link>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MovieItem.sass\";\n\nconst MovieItem = ({ favs, handleFavButttonClicked, id, Title, Poster }) => (\n  <div className=\"movie-item\">\n    <div className=\"img-wrapper\">\n      {Poster === \"N/A\" ? (\n        <span className=\"no-img\">Image not found</span>\n      ) : (\n        <img className=\"img\" src={`${Poster}`} alt={Title} />\n      )}\n    </div>\n    <div className=\"btns-group\">\n      <Link to={`/movie/${id}`} className=\"info-btn\">\n        <span\n          aria-label={`More information about ${Title}`}\n          className=\"fas fa-info\"\n        ></span>\n      </Link>\n      <button\n        aria-label=\"Add to favourites\"\n        className=\"fav-btn\"\n        value={id}\n        onClick={handleFavButttonClicked}\n      >\n        {favs.includes(id) ? (\n          <span aira-hidden=\"true\" className=\"fas fa-heart\"></span>\n        ) : (\n          <span aira-hidden=\"true\" className=\"far fa-heart\"></span>\n        )}\n      </button>\n    </div>\n  </div>\n);\n\nexport default MovieItem;\n","import React from \"react\";\n\nimport \"./Spinner.sass\";\n\nconst Spinner = () => (\n  <div className=\"sk-folding-cube\">\n    <div className=\"sk-cube1 sk-cube\"></div>\n    <div className=\"sk-cube2 sk-cube\"></div>\n    <div className=\"sk-cube4 sk-cube\"></div>\n    <div className=\"sk-cube3 sk-cube\"></div>\n  </div>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\n\nimport Spinner from \"../../components/Spinner/Spinner\";\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n  return promiseInProgress && <Spinner />;\n};\n\nexport default LoadingIndicator;\n","import React, { Component } from \"react\";\n\nimport MovieItem from \"../MovieItem/MovieItem\";\n\nimport \"./MovieGrid.sass\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\n\nclass MovieGrid extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if(nextProps.movies !== this.props.movies){\n      return true\n    } else if(nextProps.favs !== this.props.favs) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"movie-grid\">\n        {this.props.movies\n          ? this.props.movies.map(({ imdbID, Title, Poster }) => (\n              <MovieItem\n                key={imdbID}\n                id={imdbID}\n                Title={Title}\n                Poster={Poster}\n                favs={this.props.favs}\n                handleFavButttonClicked={this.props.handleFavButttonClicked}\n              />\n            ))\n          : null}\n        {this.props.loadingIndicatorOff ? null : <LoadingIndicator />}\n      </div>\n    );\n  }\n}\n\nexport default MovieGrid;\n","import React from \"react\";\n\nimport \"./Search.sass\";\n\nconst Search = props => (\n  <form autoComplete=\"off\" className=\"form\">\n    <label className=\"label\" htmlFor=\"query\">\n      Search Movie:{\" \"}\n    </label>\n    <input\n      placeholder=\"Search for movies...\"\n      className=\"search-input\"\n      onChange={props.handleChange}\n      type=\"text\"\n      name=\"query\"\n      id=\"query\"\n    />\n    <button className=\"submit-btn\" onClick={props.handleSubmit} type=\"submit\">\n      <span aria-hidden=\"true\" className=\"fas fa-search\"></span>\n    </button>\n  </form>\n);\n\nexport default Search;\n","import React, { Component, Fragment } from \"react\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nimport MovieGrid from \"../../components/MovieGrid/MovieGrid\";\nimport Search from \"../../components/Search/Search\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\n\nclass Homepage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: \"\",\n      query: \"\"\n    };\n\n    this.controller = new AbortController();\n    this.signal = this.controller.signal;\n  }\n\n  componentWillUnmount() {\n    console.log(\"hi\");\n    this.controller.abort();\n  }\n\n  handleChange = event => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const signal = this.signal;\n\n    trackPromise(\n      fetch(`https://www.omdbapi.com/?s=${this.state.query}&apikey=251e77f3`, {\n        signal\n      })\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ movies: data.Search });\n        })\n        .catch(error => console.log(error.message))\n    );\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Search\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        <LoadingIndicator />\n        <MovieGrid\n          loadingIndicatorOff={true}\n          favs={this.props.favs}\n          handleFavButttonClicked={this.props.handleFavButttonClicked}\n          movies={this.state.movies}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Homepage;\n","import React, { Component, Fragment } from \"react\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nimport MovieGrid from \"../../components/MovieGrid/MovieGrid\";\n\nclass Favspage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: []\n    };\n\n    this.controller = new AbortController();\n    this.signal = this.controller.signal;\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  componentDidMount() {\n    const signal = this.signal;\n    this.props.favs.forEach(id => {\n      trackPromise(\n        fetch(`https://omdbapi.com/?apikey=251e77f3&i=${id}`, { signal })\n          .then(response => response.json())\n          .then(data =>\n            this.setState(state => {\n              const moviesArray = state.movies.concat(data);\n              return {\n                movies: moviesArray\n              };\n            })\n          )\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <MovieGrid\n          favs={this.props.favs}\n          handleFavButttonClicked={this.props.handleFavButttonClicked}\n          movies={this.state.movies}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Favspage;\n","import React, { Component, Fragment } from \"react\";\nimport { trackPromise } from \"react-promise-tracker\";\nimport LoadingIndicator from \"../../components/LoadingIndicator/LoadingIndicator\";\n\nimport \"./MovieInfo.sass\";\n\nclass MovieInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movie: \"\"\n    };\n\n    this.controller = new AbortController();\n    this.signal = this.controller.signal;\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    const signal = this.signal;\n    trackPromise(\n      fetch(`https://omdbapi.com/?apikey=251e77f3&i=${id}&plot=full`, {\n        signal\n      })\n        .then(response => response.json())\n        .then(data =>\n          this.setState({ movie: data }, () => {\n            if (this.state.movie.Response === \"False\") {\n              this.props.history.replace(\"/\");\n            }\n          })\n        )\n    );\n  }\n\n  render() {\n    const {\n      Poster,\n      Title,\n      Plot,\n      Genre,\n      Released,\n      Actors,\n      imdbRating,\n      Runtime\n    } = this.state.movie;\n\n    return (\n      <Fragment>\n        <LoadingIndicator />\n        {this.state.movie ? (\n          <div className=\"movie-info\">\n            <div className=\"img-wrapper\">\n              {Poster === \"N/A\" ? (\n                <span className=\"no-img\">Image not found</span>\n              ) : (\n                <img className=\"img\" src={`${Poster}`} alt={Title} />\n              )}\n            </div>\n            <h2 className=\"title\">{Title}</h2>\n            <div className=\"info\">\n              <span className=\"released\">{Released}</span>\n              <span className=\"runtime\">{Runtime}</span>\n              <span>{imdbRating} / 10</span>\n            </div>\n            <span className=\"genre\">{Genre}</span>\n            <span className=\"actors\">{Actors}</span>\n            <p className=\"plot\">{Plot}</p>\n\n            <button\n              aria-label=\"Add to favourites\"\n              className=\"fav-btn\"\n              value={this.props.match.params.id}\n              onClick={this.props.handleFavButttonClicked}\n            >\n              {this.props.favs.includes(this.props.match.params.id) ? (\n                <span aira-hidden=\"true\" className=\"fas fa-heart\"></span>\n              ) : (\n                <span aira-hidden=\"true\" className=\"far fa-heart\"></span>\n              )}\n            </button>\n          </div>\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nexport default MovieInfo;\n","import React, { Component, Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header/Header\";\nimport Homepage from \"./pages/Homepage/Homepage\";\nimport Favspage from \"./pages/Favspage/Favspage\";\nimport MovieInfo from \"./pages/MovieInfo/MovieInfo\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: \"\",\n      query: \"\",\n      favs: localStorage.favs ? JSON.parse(localStorage.favs) : []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.favs)\n  }\n  \n\n  saveInLocalStorage = favs => {\n    localStorage.setItem(\"favs\", JSON.stringify(favs));\n  };\n\n  handleFavButttonClicked = event => {\n    const value = event.currentTarget.value;\n    \n    if (!this.state.favs.includes(value)) {\n      this.setState(\n        state => {\n          const favs = state.favs.concat(value);\n\n          return {\n            favs\n          };\n        },\n        () => {\n          this.saveInLocalStorage(this.state.favs);\n        }\n      );\n    } else {\n      this.setState(\n        state => {\n          const favs = state.favs.filter(id => id !== value);\n          return {\n            favs\n          };\n        },\n        () => {\n          this.saveInLocalStorage(this.state.favs);\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path=\"/favs\"\n            render={() => (\n              <Favspage\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/movie/:id\"\n            render={props => (\n              <MovieInfo\n                {...props}\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            render={() => (\n              <Homepage\n                favs={this.state.favs}\n                handleFavButttonClicked={this.handleFavButttonClicked}\n              />\n            )}\n          />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}